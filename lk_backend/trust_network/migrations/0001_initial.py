# Generated by Django 5.2.1 on 2025-08-11 04:00

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('accounts', '0001_initial'),
        ('needs', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='QuickJob',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Brief job title', max_length=200)),
                ('description', models.TextField(help_text='Detailed job description')),
                ('location', models.CharField(max_length=255)),
                ('status', models.CharField(choices=[('OPEN', 'Open'), ('ASSIGNED', 'Assigned'), ('COMPLETED', 'Completed'), ('CANCELLED', 'Cancelled')], default='OPEN', max_length=20)),
                ('urgency', models.CharField(choices=[('LOW', 'Low'), ('MEDIUM', 'Medium'), ('HIGH', 'High'), ('URGENT', 'Urgent')], default='MEDIUM', max_length=20)),
                ('budget_suggestion', models.DecimalField(blank=True, decimal_places=2, help_text='Suggested budget range', max_digits=10, null=True)),
                ('assigned_at', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('raw_query', models.TextField(blank=True, help_text='Original voice/text query from user')),
                ('parsed_intent', models.JSONField(default=dict, help_text='Parsed intent from NLP processing')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('assigned_contractor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_quick_jobs', to='accounts.contractor')),
                ('customer', models.ForeignKey(help_text='Customer who posted the job', on_delete=django.db.models.deletion.CASCADE, related_name='quick_jobs', to=settings.AUTH_USER_MODEL)),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='quick_jobs', to='needs.services')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='TrustScoreLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('old_score', models.FloatField()),
                ('new_score', models.FloatField()),
                ('reason', models.CharField(max_length=255)),
                ('calculation_details', models.JSONField(default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('contractor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='trust_score_logs', to='accounts.contractor')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='QuickJobInterest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField(blank=True, help_text='Optional message from contractor')),
                ('proposed_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('contractor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='job_interests', to='accounts.contractor')),
                ('quick_job', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='interests', to='trust_network.quickjob')),
            ],
            options={
                'ordering': ['-created_at'],
                'unique_together': {('quick_job', 'contractor')},
            },
        ),
        migrations.CreateModel(
            name='TrustConnection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.TextField(blank=True, help_text='Optional comment about the recommendation')),
                ('trust_level', models.IntegerField(default=5, help_text='Trust level from 1-10, default 5', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('contractor', models.ForeignKey(help_text='Contractor being recommended', on_delete=django.db.models.deletion.CASCADE, related_name='received_recommendations', to='accounts.contractor')),
                ('recommender', models.ForeignKey(help_text='User who is giving the recommendation', on_delete=django.db.models.deletion.CASCADE, related_name='given_recommendations', to=settings.AUTH_USER_MODEL)),
                ('service_context', models.ForeignKey(blank=True, help_text='Service context for this recommendation', null=True, on_delete=django.db.models.deletion.SET_NULL, to='needs.services')),
            ],
            options={
                'ordering': ['-created_at'],
                'unique_together': {('recommender', 'contractor')},
            },
        ),
    ]
